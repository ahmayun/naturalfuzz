# Coverage data, format version: 2.0
# Statement data:
# - id
# - source path
# - package name
# - class name
# - class type (Class, Object or Trait)
# - full class name
# - method name
# - start offset
# - end offset
# - line number
# - symbol name
# - tree name
# - is branch
# - invocations count
# - is ignored
# - description (can be multi-line)
# '' sign
# ------------------------------------------
1
/home/ahmad/jazzer/src/main/scala/examples/faulty/StudentGrade.scala
examples.faulty
StudentGrade
Object
examples.faulty.StudentGrade
main
151
166
8
abstraction.SparkConf.<init>
Apply
false
0
false
new abstraction.SparkConf()

2
/home/ahmad/jazzer/src/main/scala/examples/faulty/StudentGrade.scala
examples.faulty
StudentGrade
Object
examples.faulty.StudentGrade
main
171
197
9
abstraction.SparkConf.setMaster
Apply
false
0
false
conf.setMaster("local[*]")

3
/home/ahmad/jazzer/src/main/scala/examples/faulty/StudentGrade.scala
examples.faulty
StudentGrade
Object
examples.faulty.StudentGrade
main
202
233
10
abstraction.SparkConf.setAppName
Apply
false
0
false
conf.setAppName("StudentGrade")

4
/home/ahmad/jazzer/src/main/scala/examples/faulty/StudentGrade.scala
examples.faulty
StudentGrade
Object
examples.faulty.StudentGrade
main
248
270
12
abstraction.SparkContext.<init>
Apply
false
0
false
new abstraction.SparkContext(conf)

5
/home/ahmad/jazzer/src/main/scala/examples/faulty/StudentGrade.scala
examples.faulty
StudentGrade
Object
examples.faulty.StudentGrade
main
287
1006
36
abstraction.RDD.collect
Apply
false
0
false
abstraction.this.RDD.toPairRDD[String, Int](sc.textFile(args.apply(0)).map[Array[String]](((x$1: String) => x$1.split(",")))((ClassTag.apply[Array[String]](scala.runtime.ScalaRunTime.arrayClass(classOf[java.lang.String])): scala.reflect.ClassTag[Array[String]])).map[(String, Int)](((a: Array[String]) => {
  val ret: (String, Int) = scala.Tuple2.apply[String, Int](a.apply(0), scala.Predef.augmentString(a.apply(1)).toInt);
  if (scala.Predef.augmentString(a.apply(1)).toInt.>(7325622).&&(scala.Predef.augmentString(a.apply(1)).toInt.<(8463215)))
    throw new scala.`package`.RuntimeException()
  else
    ();
  ret
}))((ClassTag.apply[(String, Int)](classOf[scala.Tuple2]): scala.reflect.ClassTag[(String, Int)])).map[(String, Int)](((a: (String, Int)) => {
  if (a._2.>(9325622).&&(a._2.<(10463215)))
    throw new scala.`package`.RuntimeException()
  else
    ();
  if (a._2.>(40))
    scala.Tuple2.apply[String, Int](a._1.+(" Pass"), 1)
  else
    scala.Tuple2.apply[String, Int](a._1.+(" Fail"), 1)
}))((ClassTag.apply[(String, Int)](classOf[scala.Tuple2]): scala.reflect.ClassTag[(String, Int)])))((ClassTag.apply[String](classOf[java.lang.String]): scala.reflect.ClassTag[String]), (ClassTag.Int: scala.reflect.ClassTag[Int])).reduceByKey(((a: Int, b: Int) => {
  val ret: Int = a.+(b);
  if (ret.>(7325622).&&(ret.<(8463215)))
    throw new scala.`package`.RuntimeException()
  else
    ();
  ret
})).filter(((v: (String, Int)) => {
  if (v._2.>(8).&&(v._2.<(10)))
    throw new scala.`package`.RuntimeException()
  else
    ();
  v._2.>(5)
})).collect()

6
/home/ahmad/jazzer/src/main/scala/examples/faulty/StudentGrade.scala
examples.faulty
StudentGrade
Object
examples.faulty.StudentGrade
main
1045
1054
37
scala.StringContext.s
Apply
false
0
false
scala.StringContext.apply("", ", ", "").s(a, b)

7
/home/ahmad/jazzer/src/main/scala/examples/faulty/StudentGrade.scala
examples.faulty
StudentGrade
Object
examples.faulty.StudentGrade
main
1037
1055
37
scala.Predef.println
Apply
false
0
false
scala.Predef.println(scala.StringContext.apply("", ", ", "").s(a, b))

8
/home/ahmad/jazzer/src/main/scala/examples/faulty/StudentGrade.scala
examples.faulty
StudentGrade
Object
examples.faulty.StudentGrade
main
287
1056
37
scala.collection.IndexedSeqOptimized.foreach
Apply
false
0
false
scala.Predef.refArrayOps[(String, Int)](abstraction.this.RDD.toPairRDD[String, Int](sc.textFile(args.apply(0)).map[Array[String]](((x$1: String) => x$1.split(",")))((ClassTag.apply[Array[String]](scala.runtime.ScalaRunTime.arrayClass(classOf[java.lang.String])): scala.reflect.ClassTag[Array[String]])).map[(String, Int)](((a: Array[String]) => {
  val ret: (String, Int) = scala.Tuple2.apply[String, Int](a.apply(0), scala.Predef.augmentString(a.apply(1)).toInt);
  if (scala.Predef.augmentString(a.apply(1)).toInt.>(7325622).&&(scala.Predef.augmentString(a.apply(1)).toInt.<(8463215)))
    throw new scala.`package`.RuntimeException()
  else
    ();
  ret
}))((ClassTag.apply[(String, Int)](classOf[scala.Tuple2]): scala.reflect.ClassTag[(String, Int)])).map[(String, Int)](((a: (String, Int)) => {
  if (a._2.>(9325622).&&(a._2.<(10463215)))
    throw new scala.`package`.RuntimeException()
  else
    ();
  if (a._2.>(40))
    scala.Tuple2.apply[String, Int](a._1.+(" Pass"), 1)
  else
    scala.Tuple2.apply[String, Int](a._1.+(" Fail"), 1)
}))((ClassTag.apply[(String, Int)](classOf[scala.Tuple2]): scala.reflect.ClassTag[(String, Int)])))((ClassTag.apply[String](classOf[java.lang.String]): scala.reflect.ClassTag[String]), (ClassTag.Int: scala.reflect.ClassTag[Int])).reduceByKey(((a: Int, b: Int) => {
  val ret: Int = a.+(b);
  if (ret.>(7325622).&&(ret.<(8463215)))
    throw new scala.`package`.RuntimeException()
  else
    ();
  ret
})).filter(((v: (String, Int)) => {
  if (v._2.>(8).&&(v._2.<(10)))
    throw new scala.`package`.RuntimeException()
  else
    ();
  v._2.>(5)
})).collect()).foreach[Unit](((x0$1: (String, Int)) => x0$1 match {
  case (_1: String, _2: Int)(String, Int)((a @ _), (b @ _)) => scala.Predef.println(scala.StringContext.apply("", ", ", "").s(a, b))
}))

9
/home/ahmad/jazzer/src/main/scala/examples/faulty/StudentGrade.scala
examples.faulty
StudentGrade
Object
examples.faulty.StudentGrade
main
1059
1059
38
<nosymbol>
Literal
false
0
false
()

